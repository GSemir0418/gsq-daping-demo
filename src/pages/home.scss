@import '../shared/helper';

.home {
  flex: 1;
  display: flex;
  flex-direction: column;
  // 以上目的是子元素铺满父元素
  background: #010310;
  //字体颜色
  color: white;
  font-size: px(16);
  > header {
    height: px(99);
    width: px(2420);
    margin: 0 auto; //header元素水平居中
    background-size: cover; //把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。
  }
  > footer {
    height: px(68);
    //不设置宽度，使其横向自动拉到最大
    margin-top: px(20) 0 1px;
    border: 1px solid #0d2d59;
    border-radius: 4px;
    background: #0c0d2b;
    display: flex;
    align-items: center; //定义flex子项在flex容器的当前行的侧轴（纵轴）方向上的对齐方式，适用一行flex子元素 纵向对齐
    //align-content//适用多行flex子元素的排列
    justify-content: center; //设置flex子项（flex items）在主轴上的对齐方式 横向对齐
  }
  > main {
    width: px(2420);
    margin: 0 auto; //main元素居中
    padding: px(30);
    flex: 1;
    display: grid; //grid布局
    grid-template:
      'box1 box2 box4 box5' 755fr
      'box3 box3 box4 box5' 363fr / 366fr 361fr 811fr 747fr; //很神奇 能自适应调整大小比例
    grid-column-gap: px(28); //网格纵向间距大小
    grid-row-gap: px(28); //网格横向间距大小
    > section {
      text-align: center; //规定元素中的文本的水平居中对齐
    }
    .bordered {
      border: 1px solid #4178c0;
      border-radius: 4px;
      position: relative;
      //box-shadow: 水平阴影位置 垂直阴影位置 模糊距离 阴影大小;
      box-shadow: 0 0 2px 0 #0e325f, inset 0 0 2px 0 #0e325f;
      background: #0c1139;
      //伪元素，其将成为匹配选中的元素的第一个子元素。常通过 content 属性来为一个元素添加修饰性的内容。此元素默认为行内元素。
      &::before {
        content: '';
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        top: 0;
        border-radius: 4px;
        // 分别给四个边加阴影
        box-shadow: 17px 0 0 -16px #0e325f, -17px 0 0 -16px #0e325f,
          0 17px 0 -16px #0e325f, 0 -17px 0 -16px #0e325f, 9px 0 0 -8px #0d4483,
          -9px 0 0 -8px #0d4483, 0 9px 0 -8px #0d4483, 0 -9px 0 -8px #0d4483;
      }
    }
    > .section1 {
      grid-area: box1;
      display: flex;
      flex-direction: column;
      //均匀排列每个元素，首个元素放置于起点，末尾元素放置于终点
      justify-content: space-between;
    }
    > .section2 {
      grid-area: box2;
      display: flex;
      justify-content: space-between;
      flex-direction: column;
    }
    > .section3 {
      grid-area: box3;
    }
    > .section4 {
      grid-area: box4;
      display: flex;
      justify-content: space-between;
      flex-direction: column;
    }
    > .section5 {
      grid-area: box5;
    }
    .管辖统计,
    .案件破获排名,
    .案发趋势分析,
    .案发时段分析,
    .战果表,
    .籍贯,
    .年龄段 {
      height: px(315);
      display: flex;
      flex-direction: column;
      text-align: center; //规定元素中的文本的水平居中对齐
      align-items: center;
      h2 {
        flex-shrink: 0; //不会被其他元素挤到
        border: 1px solid #0a5299;
        border-bottom-left-radius: 4px;
        border-bottom-right-radius: 4px;
        font-size: px(22);
        line-height: px(24);
        padding: px(10) px(28);
        //text-shadow: 水平阴影位置 垂直阴影位置 模糊距离 阴影大小;
        text-shadow: 0 0 px(3) white;
      }
      .chart {
        flex: 1;
        width: 100%;
      }
    }
    .案件破获排名 {
      height: px(411);
      .legend {
        display: flex;
        align-items: center;
        justify-content: flex-end; //右对齐
        width: 100%;
        padding: 0 px(20) px(10);
        > .first,
        > .second {
          display: inline-block;
          width: px(18);
          height: px(12);
          margin: 0 px(10);
        }
        .first {
          background: #2034f9;
        }
        .second {
          background: #b92ae8;
        }
      }
    }
    .案发趋势分析,
    .案发时段分析 {
      height: px(363);
      width: 100%;
    }
    .战果表 {
      height: 100%;
      > table {
        margin-top: px(38);
        border-collapse: collapse; //表格合并边框，默认是separate
        th,
        td {
          border: 1px solid #1a3671;
        }
        thead {
          th {
            height: px(70);
            box-shadow: inset 0 0 px(60) 0 #1f3d85;
          }
        }
        tbody {
          td {
            height: px(50);
            width: px(84);
            background: #1c2456;
          }
        }
      }
    }
    .籍贯 {
      height: px(753);
      background: transparent; //背景颜色：透明
      > .wrapper {
        //定位用的
        position: relative;
        width: 100%;
        flex: 1;
        display: flex;
        flex-direction: column;
        .chart {
          flex: 1;
        }
        .legend {
          position: absolute;
          top: px(40);
          left: px(20);
          display: flex;
          align-items: center;
          font-size: px(22);
          padding: px(20) px(10) px(20) 0;
          border-radius: 0;
          .icon {
            margin: 0 px(10);
            display: inline-block;
            width: px(16);
            height: px(16);
            border-radius: 50%; //成圆形了
            background: #1cecd9;
          }
        }
        .notes {
          position: absolute;
          bottom: px(10);
          right: px(10);
        }
      }
    }
    .年龄段 {
      //上面写了下面还要一遍是为什么。。
      display: flex;
      flex-direction: column; //加上这两句居然解决了与上面部分间距的问题！
      height: px(363);
      .charts {
        width: 100%;
        flex: 1;
        display: flex; //内部排列方式为flex
        padding: px(30); //内边距
      }
      &-图1,
      &-图2,
      &-图3 {
        flex: 1; //自动铺满
        display: flex;
        flex-direction: column;
        .chart {
          position: relative; //相对定位 为了定位里面的text
          display: flex;
          > .main {
            flex: 1; //自动铺满剩余部分
          }
          > .text {
            position: absolute;
            top: 50%;
            left: 50%; //绝对定位居中，但是基于左上角的居中
            transform: translate(-50%, -50%); //还需移动自身的50%
            color: #33a4fa;
            font-size: px(40);
            text-shadow: 0 0 px(20) #33a4fa;
            font-weight: bold; //字体加粗
          }
        }
        .legend {
          height: px(40); //指定legend部分高度
          display: flex;
          align-items: center; //纵向居中
          justify-content: center; //横向居中
          flex-wrap: wrap; //自动换行
          > span {
            display: inline-block;
            width: px(16);
            height: px(10);
            border-radius: px(2);
            margin: 0 px(10);
          }
          .male {
            background: #33a4fa;
          }
          .female {
            background: #8d70f8;
          }
        }
      }
      &-图2 {
        width: px(290);
        flex-shrink: 0; //保证图2不会被挤到，表示图2不进行灵活收缩
        .legend {
          justify-content: flex-start; //左对齐排列
        }
      }
      &-图3 {
        border: 1px solid #08397d;
        width: 100%;
        h3 {
          font-size: px(20);
          color: #7ab6db;
          margin-top: px(6);
        }
      }
    }
  }
}
